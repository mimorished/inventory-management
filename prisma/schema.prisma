
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}
// schema.prisma
model Item {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  title         String
  description   String?
  category      Category  @relation(fields: [categoryId], references: [id], onDelete:Cascade)
  categoryId    String     @db.ObjectId
  sku           String    @unique
  barcode       String?
  quantity      Int
  unit          Unit      @relation(fields: [unitId], references: [id])
  unitId        String    @db.ObjectId
  brand         Brand     @relation(fields: [brandId], references: [id])
  brandId       String    @db.ObjectId
  warehouse         Warehouse     @relation(fields: [warehouseId], references: [id])
  warehouseId   String      @db.ObjectId
  sellingPrice     Float
  buyingPrice     Float
  //supplier      String
  reOrderPoint  Int
  //imageUrl        String[]  @db.StringArray
  weight        Float?
  dimensions    String?
  taxRate       Float
  notes         String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Category {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  title String
  description String?
  Item      Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Unit {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  abbreviation  String
  Item      Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Brand {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  title     String
  Item      Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
model Warehouse {
  id  String  @id @default(auto()) @map("_id") @db.ObjectId
  title          String
  location      String?
  description   String?
  warehouseType String
  Item      Item[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model User {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  name           String?
  email          String?    @unique
  emailVerified  DateTime?
  hashedPassword String?
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
}